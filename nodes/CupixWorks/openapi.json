{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "adam.lee@cupix.com",
      "name" : "Adam Lee"
    },
    "title" : "CupixWorks n8n SDK",
    "version" : "1.13.3"
  },
  "servers" : [ {
    "url" : "https://api.cupix.works/api/v1"
  } ],
  "paths" : {
    "/annotations" : {
      "get" : {
        "description" : "Annotation 목록을 조회한다. `capture_id` 또는 `annotation_layer_ids`를 필수로 입력해야한다.",
        "operationId" : "annotation_get_annotations",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "AnnotationLayer ID list",
          "explode" : false,
          "in" : "query",
          "name" : "annotation_layer_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aread ID list",
          "explode" : false,
          "in" : "query",
          "name" : "area_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pano ID list",
          "explode" : false,
          "in" : "query",
          "name" : "pano_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationListResponse"
                }
              }
            },
            "description" : "Annotation list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Annotation list",
        "tags" : [ "Annotation" ]
      },
      "post" : {
        "operationId" : "annotation_create_annotation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAnnotationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/comments" : {
      "get" : {
        "operationId" : "annotation_get_comments",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentListResponse"
                }
              }
            },
            "description" : "Comment list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get comment list",
        "tags" : [ "Annotation" ]
      },
      "post" : {
        "operationId" : "annotation_create_comment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCommentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Comment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create comment",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/comments/{id}" : {
      "delete" : {
        "operationId" : "annotation_delete_comment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Comment ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation Comment",
        "tags" : [ "Annotation" ]
      },
      "get" : {
        "operationId" : "annotation_get_comment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Comment ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Comment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get comment",
        "tags" : [ "Annotation" ]
      },
      "put" : {
        "operationId" : "annotation_update_comment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Comment ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCommentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Comment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update comment",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/fields/{id}" : {
      "get" : {
        "operationId" : "annotation_get_annotation_field",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Field",
        "tags" : [ "Annotation" ]
      },
      "put" : {
        "operationId" : "annotation_update_annotation_field",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFieldRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Field",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/fields/{id}/clear_fields" : {
      "put" : {
        "operationId" : "annotation_clear_annotation_field_fields",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "value" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear annotation field fields",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}" : {
      "delete" : {
        "operationId" : "annotation_delete_annotation",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation",
        "tags" : [ "Annotation" ]
      },
      "get" : {
        "operationId" : "annotation_get_annotation",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation",
        "tags" : [ "Annotation" ]
      },
      "put" : {
        "operationId" : "annotation_update_annotation",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/clear_fields" : {
      "put" : {
        "operationId" : "annotation_clear_fields",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Annoation fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail", "parent_id", "value", "annotatable" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Annotation" ]
      }
    },
    "/captures" : {
      "get" : {
        "operationId" : "capture_get_captures",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Capture IDs",
          "explode" : false,
          "in" : "query",
          "name" : "edit_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "User ID",
          "explode" : true,
          "in" : "query",
          "name" : "user_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureListResponse"
                }
              }
            },
            "description" : "Capture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture list",
        "tags" : [ "Capture" ]
      },
      "post" : {
        "operationId" : "capture_create_capture",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCaptureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}" : {
      "get" : {
        "operationId" : "capture_get_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCaptureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/clear_fields" : {
      "put" : {
        "operationId" : "capture_clear_fields",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Capture fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/publish" : {
      "delete" : {
        "operationId" : "capture_unpublish_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Capture",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_publish_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/facilities" : {
      "get" : {
        "operationId" : "facility_get_facilities",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\narchived: 아카이브 된 상태\nvisible: untrashed + archived\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent", "archived", "visible" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "클러스터링 정밀도",
          "explode" : true,
          "in" : "query",
          "name" : "clustering_precision",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "number"
          },
          "style" : "form"
        }, {
          "description" : "geo distance 검색 시 사용할 위도",
          "explode" : true,
          "in" : "query",
          "name" : "latitude",
          "required" : false,
          "schema" : {
            "format" : "float",
            "type" : "number"
          },
          "style" : "form"
        }, {
          "description" : "geo distance 검색 시 사용할 경도",
          "explode" : true,
          "in" : "query",
          "name" : "longitude",
          "required" : false,
          "schema" : {
            "format" : "float",
            "type" : "number"
          },
          "style" : "form"
        }, {
          "description" : "geo distance 검색 시 사용할 반경",
          "explode" : true,
          "in" : "query",
          "name" : "radius",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "number"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityListResponse"
                }
              }
            },
            "description" : "Facility list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Facility list",
        "tags" : [ "Facility" ]
      },
      "post" : {
        "operationId" : "facility_create_facility",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFacilityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}" : {
      "get" : {
        "operationId" : "facility_get_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Facility",
        "tags" : [ "Facility" ]
      },
      "put" : {
        "operationId" : "facility_update_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFacilityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/clear_fields" : {
      "put" : {
        "operationId" : "facility_clear_fields",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Facility fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "address", "facility_size", "location", "logo", "number" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Facility" ]
      }
    },
    "/workspaces" : {
      "get" : {
        "operationId" : "workspace_get_workspaces",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "조건에 맞는 Workspace를 필터링 하며, 콤마(,)로 구분된 여러개의 조건을 입력할 수 있다.\n\n가능한 조건 및 입력값\n* state={created, active, inactive}\n",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceListResponse"
                }
              }
            },
            "description" : "Workspace list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workspace List",
        "tags" : [ "Workspace" ]
      },
      "post" : {
        "operationId" : "workspace_create_workspace",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkspaceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceResponse"
                }
              }
            },
            "description" : "Workspace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workspace",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}" : {
      "get" : {
        "operationId" : "workspace_get_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceResponse"
                }
              }
            },
            "description" : "Workspace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workspace",
        "tags" : [ "Workspace" ]
      },
      "put" : {
        "operationId" : "workspace_update_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateWorkspaceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceResponse"
                }
              }
            },
            "description" : "Workspace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update workspace",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/clear_fields" : {
      "put" : {
        "operationId" : "workspace_clear_fields",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Workspace fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "logo" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Workspace" ]
      }
    }
  },
  "components" : {
    "callbacks" : { },
    "examples" : { },
    "headers" : { },
    "links" : { },
    "parameters" : {
      "annotationClearFieldsParam" : {
        "description" : "Annoation fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail", "parent_id", "value", "annotatable" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "annotationIdPathParam" : {
        "description" : "Annotation ID",
        "explode" : false,
        "in" : "path",
        "name" : "annotation_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "annotationIdQueryParam" : {
        "description" : "Annotation ID",
        "explode" : true,
        "in" : "query",
        "name" : "annotation_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "annotationLayerIdsQueryParam" : {
        "description" : "AnnotationLayer ID list",
        "explode" : false,
        "in" : "query",
        "name" : "annotation_layer_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "areaIdsQueryParam" : {
        "description" : "Aread ID list",
        "explode" : false,
        "in" : "query",
        "name" : "area_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "captureClearFieldsParam" : {
        "description" : "Capture fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "captureIdQueryParam" : {
        "description" : "Capture ID",
        "explode" : true,
        "in" : "query",
        "name" : "capture_id",
        "required" : false,
        "schema" : {
          "type" : "integer"
        },
        "style" : "form"
      },
      "editCaptureIdsQueryParam" : {
        "description" : "Capture IDs",
        "explode" : false,
        "in" : "query",
        "name" : "edit_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "extraFilterQueryParam" : {
        "description" : "filter empty spacetime ( ex. extra_filter=exclude_empty_counts )",
        "explode" : true,
        "in" : "query",
        "name" : "extra_filter",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "facilityClearFieldsParam" : {
        "description" : "Facility fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "address", "facility_size", "location", "logo", "number" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "facilityClusteringPrecisionParam" : {
        "description" : "클러스터링 정밀도",
        "explode" : true,
        "in" : "query",
        "name" : "clustering_precision",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "number"
        },
        "style" : "form"
      },
      "facilityGeotileLatitudeParam" : {
        "description" : "geo distance 검색 시 사용할 위도",
        "explode" : true,
        "in" : "query",
        "name" : "latitude",
        "required" : false,
        "schema" : {
          "format" : "float",
          "type" : "number"
        },
        "style" : "form"
      },
      "facilityGeotileLongitudeParam" : {
        "description" : "geo distance 검색 시 사용할 경도",
        "explode" : true,
        "in" : "query",
        "name" : "longitude",
        "required" : false,
        "schema" : {
          "format" : "float",
          "type" : "number"
        },
        "style" : "form"
      },
      "facilityGeotileRadiusParam" : {
        "description" : "geo distance 검색 시 사용할 반경",
        "explode" : true,
        "in" : "query",
        "name" : "radius",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "number"
        },
        "style" : "form"
      },
      "facilityVisibilityParam" : {
        "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\narchived: 아카이브 된 상태\nvisible: untrashed + archived\n",
        "explode" : true,
        "in" : "query",
        "name" : "visibility",
        "required" : false,
        "schema" : {
          "enum" : [ "untrashed", "in_trash_by_parent", "archived", "visible" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "fieldClearFieldsParam" : {
        "description" : "Field fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "value" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "fieldsParam" : {
        "description" : "Fields list to response",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "filterParam" : {
        "description" : "Filter",
        "explode" : false,
        "in" : "query",
        "name" : "filter",
        "required" : false,
        "schema" : {
          "items" : {
            "example" : "capture_id=1",
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "fromAtParam" : {
        "description" : "UTC+0 based. Must be used together with `to_at`.",
        "explode" : true,
        "in" : "query",
        "name" : "from_at",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        },
        "style" : "form"
      },
      "groupIdsQueryParam" : {
        "description" : "Group ID list",
        "explode" : false,
        "in" : "query",
        "name" : "group_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "idOfAnnotationLayerPathParam" : {
        "description" : "AnnotationLayer ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfAnnotationPathParam" : {
        "description" : "Annotation ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfCapturePathParam" : {
        "description" : "Capture ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfCommentPathParam" : {
        "description" : "Comment ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfFieldPathParam" : {
        "description" : "Field ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfFormDesignPathParam" : {
        "description" : "FormDesign ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfWorkspacePathParam" : {
        "description" : "Workspace ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "keyOfFacilityPathParam" : {
        "description" : "Facility key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "kindOfResourcePathParam" : {
        "description" : "Resource kind",
        "explode" : false,
        "in" : "path",
        "name" : "kind",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "levelIdsQueryParam" : {
        "description" : "Level ID list",
        "explode" : false,
        "in" : "query",
        "name" : "level_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "memberDisplayOptionParam" : {
        "description" : "Memeber display option",
        "explode" : true,
        "in" : "query",
        "name" : "display_option",
        "required" : true,
        "schema" : {
          "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "metaKeyPathParam" : {
        "description" : "Meta key",
        "explode" : false,
        "in" : "path",
        "name" : "meta_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "minPermissionQueryParam" : {
        "description" : "minimum permission",
        "explode" : true,
        "in" : "query",
        "name" : "min_permission",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        },
        "style" : "form"
      },
      "orderParam" : {
        "description" : "Field name to order",
        "explode" : true,
        "in" : "query",
        "name" : "order_by",
        "required" : false,
        "schema" : {
          "example" : "created_at",
          "type" : "string"
        },
        "style" : "form"
      },
      "pageParam" : {
        "description" : "Page number",
        "explode" : true,
        "in" : "query",
        "name" : "page",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        },
        "style" : "form"
      },
      "panoIdsQueryParam" : {
        "description" : "Pano ID list",
        "explode" : false,
        "in" : "query",
        "name" : "pano_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "perPageParam" : {
        "description" : "Item count per page",
        "explode" : true,
        "in" : "query",
        "name" : "per_page",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        },
        "style" : "form"
      },
      "progressIdPathParam" : {
        "description" : "Progress ID",
        "explode" : false,
        "in" : "path",
        "name" : "progress_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "progressIdQueryParam" : {
        "description" : "Progress ID",
        "explode" : true,
        "in" : "query",
        "name" : "progress_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "recordIdQueryParam" : {
        "description" : "Record ID",
        "explode" : true,
        "in" : "query",
        "name" : "record_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "recordIdsQueryParam" : {
        "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
        "explode" : false,
        "in" : "query",
        "name" : "record_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "resourceIdPathParam" : {
        "description" : "Resource ID",
        "explode" : false,
        "in" : "path",
        "name" : "resource_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "resourceKeyPathParam" : {
        "description" : "Resource key",
        "explode" : false,
        "in" : "path",
        "name" : "resource_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "reviewKeyPathParam" : {
        "description" : "Review key",
        "explode" : false,
        "in" : "path",
        "name" : "review_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "searchParam" : {
        "description" : "Search query",
        "explode" : true,
        "in" : "query",
        "name" : "q",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "sortParam" : {
        "description" : "Sort direction",
        "explode" : true,
        "in" : "query",
        "name" : "sort",
        "required" : false,
        "schema" : {
          "example" : "desc",
          "type" : "string"
        },
        "style" : "form"
      },
      "toAtParam" : {
        "description" : "UTC+0 based. Must be used together with `from_at`.",
        "explode" : true,
        "in" : "query",
        "name" : "to_at",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        },
        "style" : "form"
      },
      "updatedSinceParam" : {
        "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
        "explode" : false,
        "in" : "header",
        "name" : "X-CUPIX-UPDATED-SINCE",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        },
        "style" : "simple"
      },
      "userIdQueryParam" : {
        "description" : "User ID",
        "explode" : true,
        "in" : "query",
        "name" : "user_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "userIdsQueryParam" : {
        "description" : "User ID list",
        "explode" : false,
        "in" : "query",
        "name" : "user_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "visibilityParam" : {
        "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
        "explode" : true,
        "in" : "query",
        "name" : "visibility",
        "required" : false,
        "schema" : {
          "enum" : [ "untrashed", "in_trash_by_parent" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "workspaceClearFieldsParam" : {
        "description" : "Workspace fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "logo" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workspaceFilterParam" : {
        "description" : "조건에 맞는 Workspace를 필터링 하며, 콤마(,)로 구분된 여러개의 조건을 입력할 수 있다.\n\n가능한 조건 및 입력값\n* state={created, active, inactive}\n",
        "explode" : true,
        "in" : "query",
        "name" : "filter",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "workspaceIdQueryParam" : {
        "description" : "Workspace ID",
        "explode" : true,
        "in" : "query",
        "name" : "workspace_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      }
    },
    "requestBodies" : {
      "BulkShareRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkShareRequest"
            }
          }
        },
        "required" : true
      },
      "BulkTrashAnnotationsRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkTrashAnnotationsRequest"
            }
          }
        },
        "required" : true
      },
      "ContactSalesRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ContactSalesRequest"
            }
          }
        },
        "required" : true
      },
      "CreateAnnotationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateAnnotationRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureResourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureResourceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureWithMaterialsRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCommentRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCommentRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCustomEventRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCustomEventRequest"
            }
          }
        },
        "required" : true
      },
      "CreateEntityParameterRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateEntityParameterRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFacilityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFacilityRequest"
            }
          }
        },
        "required" : true
      },
      "CreateResourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateResourceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateUploadUrlRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateUploadUrlRequest"
            }
          }
        },
        "required" : true
      },
      "CreateWorkspaceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateWorkspaceRequest"
            }
          }
        },
        "required" : true
      },
      "ImportCategoryRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ImportCategoryRequest"
            }
          }
        },
        "required" : true
      },
      "InvokeCaptureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokeCaptureRequest"
            }
          }
        },
        "required" : true
      },
      "InvokeFacilityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokeFacilityRequest"
            }
          }
        },
        "required" : true
      },
      "ShareRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ShareRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAnnotationAssociationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationAssociationRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationAssociationRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAnnotationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCaptureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCaptureRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCaptureRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCommentRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCommentRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFacilityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFacilityRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFacilityRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFieldRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFieldRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateMetaRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object"
            }
          }
        },
        "required" : true
      },
      "UpdatePositionRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePositionRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateWorkspaceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateWorkspaceRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateWorkspaceRequest"
            }
          }
        },
        "required" : true
      }
    },
    "responses" : {
      "400BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description" : "Bad Request"
      },
      "401Unauthorized" : {
        "description" : "Unauthorized request"
      },
      "403PermissionDenied" : {
        "description" : "Permission denied"
      },
      "404NotFound" : {
        "description" : "Not found"
      },
      "AnnotationListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AnnotationListResponse"
            }
          }
        },
        "description" : "Annotation list"
      },
      "AnnotationResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AnnotationResponse"
            }
          }
        },
        "description" : "Annotation"
      },
      "AssetListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AssetListResponse"
            }
          }
        },
        "description" : "Asset list"
      },
      "BulkResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkResponse"
            }
          }
        },
        "description" : "Ids created by bulk operation"
      },
      "CaptureListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CaptureListResponse"
            }
          }
        },
        "description" : "Capture list"
      },
      "CaptureResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CaptureResponse"
            }
          }
        },
        "description" : "Capture"
      },
      "CaptureWithMaterialsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CaptureWithMaterialsResponse"
            }
          }
        },
        "description" : "Capture"
      },
      "CommentListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommentListResponse"
            }
          }
        },
        "description" : "Comment list"
      },
      "CommentResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommentResponse"
            }
          }
        },
        "description" : "Comment"
      },
      "EntityParameterListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EntityParameterListResponse"
            }
          }
        },
        "description" : "EntityParameter list"
      },
      "EntityParameterResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EntityParameterResponse"
            }
          }
        },
        "description" : "EntityParameter"
      },
      "EventResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EventResponse"
            }
          }
        },
        "description" : "Resource"
      },
      "FacilityListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FacilityListResponse"
            }
          }
        },
        "description" : "Facility list"
      },
      "FacilityResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FacilityResponse"
            }
          }
        },
        "description" : "Facility"
      },
      "FieldListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FieldListResponse"
            }
          }
        },
        "description" : "Field list"
      },
      "FieldResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FieldResponse"
            }
          }
        },
        "description" : "Field"
      },
      "MetaResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MetaResponse"
            }
          }
        },
        "description" : "Meta information"
      },
      "ResourceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResourceListResponse"
            }
          }
        },
        "description" : "Resource list"
      },
      "ResourceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResourceResponse"
            }
          }
        },
        "description" : "Resource"
      },
      "ShareListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ShareListResponse"
            }
          }
        },
        "description" : "Shared memeber list"
      },
      "SpacetimeListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SpacetimeListResponse"
            }
          }
        },
        "description" : "Spacetime list"
      },
      "UploadCredentialsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UploadCredentialResponse"
            }
          }
        },
        "description" : "S3 Upload Credential"
      },
      "WorkareaGroupResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkareaGroupResponse"
            }
          }
        },
        "description" : "WorkareaGroup"
      },
      "WorkspaceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkspaceListResponse"
            }
          }
        },
        "description" : "Workspace list"
      },
      "WorkspaceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkspaceResponse"
            }
          }
        },
        "description" : "Workspace"
      }
    },
    "schemas" : {
      "AccAnnotationAttributes" : {
        "properties" : {
          "acc_hub_id" : {
            "type" : "string"
          },
          "acc_project_id" : {
            "type" : "string"
          },
          "acc_issue_id" : {
            "type" : "string"
          },
          "acc_attachment_id" : {
            "type" : "string"
          },
          "acc_container_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AccessibleEditorMenuAttribute" : {
        "properties" : {
          "bim_editor_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "level_editor_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "capture_editor_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ActionAttribute" : {
        "properties" : {
          "waiting_actions" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "running_actions" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ActivityType" : {
        "enum" : [ "none", "baseline", "full", "simple", "bim_property", "wbs" ],
        "type" : "string"
      },
      "AllowedAnnotationKind" : {
        "items" : {
          "enum" : [ "acc", "acc_issue", "acc_rfi", "bim360", "bim360_issue", "bim360_rfi", "form", "link", "markup", "note", "plangrid_rfi", "plangrid_task", "procore_observation", "procore_punch_list", "procore_rfi", "voice", "procore", "plangrid" ],
          "type" : "string"
        },
        "type" : "array"
      },
      "AnchorAttribute" : {
        "properties" : {
          "anchor_type" : {
            "type" : "string"
          },
          "anchor_position" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "anchor_id" : {
            "format" : "int64",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "Annotatable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AnnotatableRequest" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pano_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "mesh_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointcloud_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Annotation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Annotation_allOf"
        }, {
          "$ref" : "#/components/schemas/Bim360AnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/AccAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/ProcoreAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/PlangridAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/LocationAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/TranscriptionAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "AnnotationItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Annotation"
          }
        },
        "type" : "object"
      },
      "AnnotationKind" : {
        "enum" : [ "acc_issue", "acc_rfi", "bim360", "bim360_issue", "bim360_rfi", "form", "link", "markup", "note", "plangrid_rfi", "plangrid_task", "procore_observation", "procore_punch_list", "procore_rfi", "voice" ],
        "type" : "string"
      },
      "AnnotationLayer" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/AnnotationLayer_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/PublishableAttribute"
        } ]
      },
      "AnnotationList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AnnotationItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AnnotationListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AnnotationListResponse_allOf"
        } ]
      },
      "AnnotationResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AnnotationResponse_allOf"
        } ]
      },
      "AnnotationsItem" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "AppliedLicenseState" : {
        "enum" : [ "active", "expired", "none" ],
        "type" : "string"
      },
      "Asset" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Asset_allOf"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/TranscriptionAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/CoverUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "AssetItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Asset"
          }
        },
        "type" : "object"
      },
      "AssetList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AssetItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AssetListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AssetListResponse_allOf"
        } ]
      },
      "AssetState" : {
        "enum" : [ "created", "resource_uploading", "resource_missing", "resource_uploaded", "processing", "done", "error" ],
        "type" : "string"
      },
      "AssetType" : {
        "enum" : [ "image", "voice_memo" ],
        "type" : "string"
      },
      "Assetable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "AvailabilityState" : {
        "enum" : [ "pending", "available", "reset" ],
        "type" : "string"
      },
      "AvailableAttribute" : {
        "properties" : {
          "availability_state" : {
            "$ref" : "#/components/schemas/AvailabilityState"
          },
          "availability_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        }
      },
      "AvatarUrls" : {
        "description" : "Avatar URLs",
        "properties" : {
          "thumb" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AwsCredentials" : {
        "properties" : {
          "aws_access_key_id" : {
            "type" : "string"
          },
          "aws_secret_access_key" : {
            "type" : "string"
          },
          "aws_session_token" : {
            "type" : "string"
          },
          "expires_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Badge" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Badge_allOf"
        } ]
      },
      "BadgeItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Badge"
          }
        },
        "type" : "object"
      },
      "BillableAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BillingAccountAttribute"
        }, {
          "$ref" : "#/components/schemas/TrialableAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute_allOf"
        } ]
      },
      "BillingAccount" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/BillingAccountState"
          },
          "email" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BillingAccountAttribute" : {
        "properties" : {
          "billing_account" : {
            "$ref" : "#/components/schemas/BillingAccount"
          }
        },
        "type" : "object"
      },
      "BillingAccountState" : {
        "enum" : [ "initializing", "active", "inactive" ],
        "type" : "string"
      },
      "BillingInfo" : {
        "properties" : {
          "total_prepaid_credit" : {
            "format" : "int64",
            "type" : "integer"
          },
          "prepaid_credit_balance" : {
            "format" : "int64",
            "type" : "integer"
          },
          "ondemand_credit_usage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "applied_product_codes" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "contract_size" : {
            "format" : "int64",
            "type" : "integer"
          },
          "contract_months" : {
            "format" : "int64",
            "type" : "integer"
          },
          "contract_unit" : {
            "type" : "string"
          },
          "unlimited_capture_credit" : {
            "type" : "boolean"
          },
          "unlimited_bim_pack" : {
            "type" : "boolean"
          },
          "pilot" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "BillingState" : {
        "description" : "Billing state",
        "enum" : [ "none", "active", "expired", "archived" ],
        "type" : "string"
      },
      "Bim" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Bim_allOf"
        }, {
          "$ref" : "#/components/schemas/BimSourceAttribute"
        }, {
          "$ref" : "#/components/schemas/BimForgeAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/ForgeTranslatedAttribute"
        } ]
      },
      "Bim360AnnotationAttributes" : {
        "properties" : {
          "bim360_project_id" : {
            "type" : "string"
          },
          "bim360_container_id" : {
            "type" : "string"
          },
          "bim360_issue_id" : {
            "type" : "string"
          },
          "bim360_attachment_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BimForgeAttribute" : {
        "properties" : {
          "origin" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "offset" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "rotate_z" : {
            "format" : "float",
            "type" : "number"
          },
          "transform_order" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "BimGridSystemState" : {
        "description" : "Bim grid system state",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "BimRevision" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BimRevision_allOf"
        }, {
          "$ref" : "#/components/schemas/BimRevisionBimSourceAttribute"
        }, {
          "$ref" : "#/components/schemas/ImportedBimVersionAttribute"
        }, {
          "$ref" : "#/components/schemas/ForgeTranslatedAttribute"
        } ]
      },
      "BimRevisionBimSourceAttribute" : {
        "properties" : {
          "bim_source" : {
            "$ref" : "#/components/schemas/BimSource"
          }
        },
        "type" : "object"
      },
      "BimSource" : {
        "enum" : [ "cupix", "bim360", "acc" ],
        "type" : "string"
      },
      "BimSourceAttribute" : {
        "properties" : {
          "bim_source" : {
            "$ref" : "#/components/schemas/BimSource"
          }
        },
        "type" : "object"
      },
      "BulkResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BulkResponse_allOf"
        } ]
      },
      "BulkShareRequest" : {
        "properties" : {
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkShareRequest_items_inner"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "BulkTrashAnnotationsRequest" : {
        "properties" : {
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "annotation_layer_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "annotation_layer_id", "ids" ],
        "type" : "object"
      },
      "Camera" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "software" : {
            "type" : "string"
          },
          "serial_number" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CameraAttribute" : {
        "properties" : {
          "camera" : {
            "$ref" : "#/components/schemas/Camera"
          }
        },
        "type" : "object"
      },
      "CameraRequest" : {
        "properties" : {
          "camera" : {
            "$ref" : "#/components/schemas/Camera"
          }
        },
        "type" : "object"
      },
      "Capture" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Capture"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Capture_allOf"
        }, {
          "$ref" : "#/components/schemas/JobableAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/CaptureTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/EfsAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/WarningAttribute"
        }, {
          "$ref" : "#/components/schemas/ReconstructionStateAttribute"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/CaptureVideoMeta"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/EditingDifficultyScoreAttribute"
        }, {
          "$ref" : "#/components/schemas/RefinementAttribute"
        }, {
          "$ref" : "#/components/schemas/RefinementAttribute"
        } ]
      },
      "CaptureEditingState" : {
        "description" : "Capture Editing state",
        "enum" : [ "waiting", "ready", "holding", "escalated", "editing", "in_review", "done", "skipped", "stopped", "re_ready" ],
        "type" : "string"
      },
      "CaptureInvokableState" : {
        "properties" : {
          "create_capture" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CaptureItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Capture"
          }
        },
        "type" : "object"
      },
      "CaptureList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CaptureItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CaptureListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CaptureListResponse_allOf"
        } ]
      },
      "CaptureResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CaptureResponse_allOf"
        } ]
      },
      "CaptureSkatType" : {
        "enum" : [ "stable", "beta" ],
        "type" : "string"
      },
      "CaptureTypeAttribute" : {
        "properties" : {
          "capture_type" : {
            "type" : "string"
          },
          "creation_platform" : {
            "type" : "string"
          },
          "upload_platform" : {
            "type" : "string"
          },
          "material" : {
            "type" : "string"
          },
          "migrated_from" : {
            "type" : "string"
          },
          "ar_data_version" : {
            "type" : "string"
          },
          "method" : {
            "type" : "string"
          },
          "singleshot_state" : {
            "type" : "string"
          },
          "singleshot_queued_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CaptureTypeRequest" : {
        "properties" : {
          "singleshot_state" : {
            "enum" : [ "running", "stopped" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CaptureVersionsRequest" : {
        "properties" : {
          "skat_version" : {
            "type" : "string"
          },
          "dnn_version" : {
            "type" : "string"
          },
          "agent_version" : {
            "type" : "string"
          },
          "maker_version" : {
            "type" : "string"
          },
          "densemapper_version" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CaptureVideoMeta" : {
        "properties" : {
          "video_length" : {
            "format" : "float",
            "type" : "number"
          },
          "recording_fps" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "CaptureWithMaterials" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Capture"
        }, {
          "$ref" : "#/components/schemas/CaptureWithMaterials_allOf"
        } ]
      },
      "CaptureWithMaterialsItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/CaptureWithMaterials"
          }
        },
        "type" : "object"
      },
      "CaptureWithMaterialsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CaptureWithMaterialsResponse_allOf"
        } ]
      },
      "CertifiedAttribute" : {
        "properties" : {
          "certifications" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ChildAssetItem" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "asset_type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cover_urls" : {
            "type" : "string"
          },
          "thumbnail_urls" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "cover_state" : {
            "type" : "string"
          },
          "transcript_state" : {
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Cluster" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Cluster_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/ClusterTypeAttribute"
        } ]
      },
      "ClusterType" : {
        "enum" : [ "none", "unrefined", "refined" ],
        "type" : "string"
      },
      "ClusterTypeAttribute" : {
        "properties" : {
          "cluster_type" : {
            "$ref" : "#/components/schemas/ClusterType"
          }
        },
        "type" : "object"
      },
      "Comment" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Comment_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "CommentItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Comment"
          }
        },
        "type" : "object"
      },
      "CommentList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CommentItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CommentListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CommentListResponse_allOf"
        } ]
      },
      "CommentResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CommentResponse_allOf"
        } ]
      },
      "CommonCreateRequest" : {
        "discriminator" : {
          "propertyName" : "commonCreateRequestType"
        },
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ConstantableAttribute" : {
        "properties" : {
          "constants" : {
            "$ref" : "#/components/schemas/ConstantableAttribute_constants"
          }
        },
        "type" : "object"
      },
      "ConstantableReqeust" : {
        "properties" : {
          "set_constants" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "ContactSalesRequest" : {
        "properties" : {
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "message" ],
        "type" : "object"
      },
      "ContentUrlType" : {
        "properties" : {
          "content_url_type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CopySubjectAttribute" : {
        "description" : "Copy states for Copyable model",
        "properties" : {
          "copy_state" : {
            "type" : "string"
          },
          "copy_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CoverState" : {
        "description" : "Cover State",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "CoverUrls" : {
        "description" : "Cover URLs",
        "properties" : {
          "large_high" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CoverUrlsAttribute" : {
        "properties" : {
          "cover_state" : {
            "$ref" : "#/components/schemas/CoverState"
          },
          "cover_upload_url" : {
            "type" : "string"
          },
          "cover_urls" : {
            "$ref" : "#/components/schemas/CoverUrls"
          }
        },
        "type" : "object"
      },
      "CreateAnnotationRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAnnotationRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/Bim360AnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/AccAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/ProcoreAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/PlangridAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/AnnotatableRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateCaptureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCaptureRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/CaptureVersionsRequest"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/FloorplanRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        } ]
      },
      "CreateCaptureResourceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "enum" : [ "processing_options", "structure_data", "ar_data", "motion_data", "origin_alignments_all", "alignments_all", "alignments_sampled", "tsdf", "reconstruction_result", "landmark" ],
            "type" : "string"
          }
        },
        "required" : [ "kind", "name" ],
        "type" : "object"
      },
      "CreateCaptureWithMaterialsRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCaptureRequest"
        }, {
          "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest_allOf"
        } ]
      },
      "CreateCommentRequest" : {
        "properties" : {
          "content" : {
            "type" : "string"
          }
        },
        "required" : [ "content" ],
        "type" : "object"
      },
      "CreateCustomEventRequest" : {
        "properties" : {
          "custom_reason" : {
            "type" : "string"
          },
          "custom_action_meta" : {
            "type" : "object"
          }
        },
        "required" : [ "custom_action_meta", "custom_reason" ],
        "type" : "object"
      },
      "CreateEntityParameterRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "data_type" : {
            "type" : "string"
          },
          "allowed_values" : {
            "type" : "string"
          },
          "is_modifiable" : {
            "type" : "boolean"
          }
        },
        "required" : [ "data_type", "name", "source" ],
        "type" : "object"
      },
      "CreateFacilityRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateFacilityRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        } ]
      },
      "CreateRequestWithUUID" : {
        "properties" : {
          "uuid" : {
            "description" : "임의로 UUID를 입력할 수 있다. UUID 형식에 어긋나는 경우 ARG10040 오류를 낸다.",
            "type" : "string"
          },
          "skip_uuid_validation" : {
            "description" : "유효한 uuid를 입력하고, skip_uuid_validation이 true로 입력된 경우 UUID 중복체크를 하지 않는다.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CreateResourceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "CreateUploadUrlRequest" : {
        "properties" : {
          "option" : {
            "enum" : [ "move_out_resource", "merge_from" ],
            "type" : "string"
          },
          "option_params" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CreateWorkspaceRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonCreateRequest"
        }, {
          "$ref" : "#/components/schemas/CreateWorkspaceRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CupixResourceNumberAttribute" : {
        "properties" : {
          "crn" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CustomerSuccessManagersAttribute" : {
        "properties" : {
          "customer_success_managers" : {
            "items" : {
              "$ref" : "#/components/schemas/User"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "CyclableAttribute" : {
        "description" : "Filesize for Resourcable model",
        "properties" : {
          "cycle_state" : {
            "$ref" : "#/components/schemas/CycleState"
          },
          "cycle_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cycle_state_updated_by" : {
            "$ref" : "#/components/schemas/CyclableAttribute_cycle_state_updated_by"
          }
        },
        "type" : "object"
      },
      "CycleState" : {
        "enum" : [ "created", "archived", "archiving", "trashed" ],
        "type" : "string"
      },
      "DateRange" : {
        "properties" : {
          "from_at" : {
            "description" : "UTC+0 based.",
            "format" : "date-time",
            "type" : "string"
          },
          "to_at" : {
            "description" : "UTC+0 based.",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "DeviationResultAttribute" : {
        "properties" : {
          "bim_icp_tm" : {
            "type" : "object"
          },
          "use_bim_icp_tm" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "DraftedAtAttribute" : {
        "properties" : {
          "drafted_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EditingDifficultyScoreAttribute" : {
        "description" : "Editing difficulty score",
        "properties" : {
          "editing_difficulty_score" : {
            "format" : "float",
            "type" : "number"
          }
        }
      },
      "EditorLevelAttribute" : {
        "properties" : {
          "editor_level" : {
            "$ref" : "#/components/schemas/EditorLevelEnum"
          }
        },
        "type" : "object"
      },
      "EditorLevelEnum" : {
        "enum" : [ "hay", "rabbit", "fox", "tiger" ],
        "type" : "string"
      },
      "EfsAttribute" : {
        "properties" : {
          "preprocessor_path" : {
            "type" : "string"
          },
          "skatmaster_path" : {
            "type" : "string"
          },
          "postprocessor_path" : {
            "type" : "string"
          },
          "deviationmaster_path" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntityParameter" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityParameter_allOf"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        } ]
      },
      "EntityParameterGroup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityParameterGroup_allOf"
        } ]
      },
      "EntityParameterItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/EntityParameter"
          }
        },
        "type" : "object"
      },
      "EntityParameterList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/EntityParameterItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data" ],
        "type" : "object"
      },
      "EntityParameterListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EntityParameterListResponse_allOf"
        } ]
      },
      "EntityParameterResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EntityParameterResponse_allOf"
        } ]
      },
      "EntityUpdatesValue" : {
        "format" : "date-time",
        "type" : "string"
      },
      "Entrypoint" : {
        "properties" : {
          "pano" : {
            "$ref" : "#/components/schemas/EntrypointPano"
          },
          "mesh" : {
            "$ref" : "#/components/schemas/EntrypointMesh"
          },
          "pointcloud" : {
            "$ref" : "#/components/schemas/EntrypointPointcloud"
          }
        },
        "type" : "object"
      },
      "EntrypointMesh" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntrypointModel"
        } ]
      },
      "EntrypointModel" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntrypointPano" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntrypointModel"
        } ]
      },
      "EntrypointPointcloud" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntrypointModel"
        } ]
      },
      "ErrorCode" : {
        "description" : "Error code from server",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ErrorResponse_allOf"
        } ]
      },
      "Event" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Event_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "EventItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Event"
          }
        },
        "type" : "object"
      },
      "EventResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EventResponse_allOf"
        } ]
      },
      "Eventable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ExpectedQualityAttribute" : {
        "properties" : {
          "expected_quality" : {
            "enum" : [ "dollhouse", "flexible" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Facility" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Facility_allOf"
        }, {
          "$ref" : "#/components/schemas/LogoUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/LocationAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/StorageAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilityCopyAttribute"
        }, {
          "$ref" : "#/components/schemas/CopySubjectAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilitySizeUnitAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilityEntityUpdatesAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/SiteinsightsReportAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilitySiteinsightsAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilityArchiveAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "FacilityAggsList" : {
        "properties" : {
          "clusters" : {
            "$ref" : "#/components/schemas/FacilityClusterItem"
          }
        },
        "type" : "object"
      },
      "FacilityArchiveAttribute" : {
        "properties" : {
          "last_archived_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "next_archive_available_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FacilityClusterItem" : {
        "properties" : {
          "center" : {
            "$ref" : "#/components/schemas/Location"
          },
          "count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "zoom" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FacilityCopyAttribute" : {
        "properties" : {
          "copied_from" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "sandbox_released_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FacilityEntityUpdates" : {
        "properties" : {
          "level" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "floorplan" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "annotation_layer" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          }
        },
        "type" : "object"
      },
      "FacilityEntityUpdatesAttribute" : {
        "properties" : {
          "entity_updates" : {
            "$ref" : "#/components/schemas/FacilityEntityUpdates"
          }
        },
        "type" : "object"
      },
      "FacilityItem" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Facility"
          }
        },
        "type" : "object"
      },
      "FacilityList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FacilityItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "FacilityListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FacilityListResponse_allOf"
        } ]
      },
      "FacilityOnCreateWorkspace" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FacilityOnCreateWorkspace_allOf"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        } ]
      },
      "FacilityResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FacilityResponse_allOf"
        } ]
      },
      "FacilitySiteinsightsAttribute" : {
        "properties" : {
          "siteinsights" : {
            "type" : "boolean"
          },
          "siteinsights_disabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "siteinsights_setup_qualified_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FacilitySizeUnitAttribute" : {
        "properties" : {
          "facility_size_unit" : {
            "enum" : [ "SQFT", "SQM" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Field" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Field"
        }, {
          "$ref" : "#/components/schemas/Field_allOf"
        } ]
      },
      "FieldItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.FieldItem"
        }, {
          "$ref" : "#/components/schemas/FieldItem_allOf"
        } ]
      },
      "FieldList" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.FieldList"
        }, {
          "$ref" : "#/components/schemas/FieldList_allOf"
        } ]
      },
      "FieldListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FieldListResponse_allOf"
        } ]
      },
      "FieldResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FieldResponse_allOf"
        } ]
      },
      "FilesizeAttribute" : {
        "description" : "Filesize for Resourcable model",
        "properties" : {
          "filesize" : {
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "Firebase" : {
        "properties" : {
          "key" : {
            "type" : "string"
          }
        },
        "required" : [ "key" ],
        "type" : "object"
      },
      "FirebaseAttribute" : {
        "properties" : {
          "firebase" : {
            "$ref" : "#/components/schemas/Firebase"
          }
        },
        "type" : "object"
      },
      "Floorplan" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Floorplan_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/FloorplanCreationFromAttribute"
        }, {
          "$ref" : "#/components/schemas/AvailableAttribute"
        }, {
          "$ref" : "#/components/schemas/CoverUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/FloorplanGeoTiffAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "FloorplanCreationFrom" : {
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "headers" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "FloorplanCreationFromAttribute" : {
        "properties" : {
          "creation_from" : {
            "$ref" : "#/components/schemas/FloorplanCreationFrom"
          }
        },
        "type" : "object"
      },
      "FloorplanGeoTiffAttribute" : {
        "properties" : {
          "geographic_type" : {
            "type" : "string"
          },
          "pixel_scale" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "model_tie_point" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FloorplanRequest" : {
        "properties" : {
          "floorplan_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_revision" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FloorplanSource" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/FloorplanSource_allOf"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        } ]
      },
      "FloorplanState" : {
        "description" : "Floorplan state",
        "enum" : [ "created", "creating", "resource_uploading", "resource_missing", "processing", "error", "done" ],
        "type" : "string"
      },
      "FloorplanTile" : {
        "properties" : {
          "base" : {
            "type" : "string"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/FloorplanTile_items_inner"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FloorplanTileState" : {
        "description" : "Floorplan tile state",
        "enum" : [ "created", "pending", "uploading", "missing", "uploaded" ],
        "type" : "string"
      },
      "FloorplanType" : {
        "description" : "Type of Floorplan",
        "enum" : [ "image", "bim", "pdf", "procore", "plangrid", "bim360", "orthomosaic" ],
        "type" : "string"
      },
      "ForgeTranslatedAttribute" : {
        "properties" : {
          "forge_translated_uploaded_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "forge_translated_list" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FormDesign" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/FormDesign_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "FormField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Field"
        }, {
          "$ref" : "#/components/schemas/FormField_allOf"
        } ]
      },
      "GeoCoordinate" : {
        "properties" : {
          "pos" : {
            "items" : {
              "type" : "number"
            },
            "type" : "array"
          },
          "quat" : {
            "items" : {
              "type" : "number"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Georeference" : {
        "properties" : {
          "epsg_code" : {
            "type" : "string"
          },
          "x" : {
            "type" : "string"
          },
          "y" : {
            "type" : "string"
          },
          "z" : {
            "type" : "string"
          },
          "lat" : {
            "format" : "float",
            "type" : "number"
          },
          "lon" : {
            "format" : "float",
            "type" : "number"
          },
          "alt" : {
            "format" : "float",
            "type" : "number"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "GeoreferenceAttribute" : {
        "properties" : {
          "georeference" : {
            "$ref" : "#/components/schemas/Georeference"
          },
          "use_georeference" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "GeoreferenceReqeust" : {
        "properties" : {
          "georeference" : {
            "$ref" : "#/components/schemas/Georeference"
          },
          "use_georeference" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "Gps" : {
        "properties" : {
          "alt" : {
            "format" : "float",
            "type" : "number"
          },
          "lat" : {
            "format" : "float",
            "type" : "number"
          },
          "lon" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "GroupCodesAttributes" : {
        "properties" : {
          "group_codes" : {
            "$ref" : "#/components/schemas/GroupCodesEnum"
          }
        },
        "type" : "object"
      },
      "GroupCodesEnum" : {
        "items" : {
          "enum" : [ "super_admin", "billing_admin", "administrators", "users", "workspace_creators", "technical_support_engineers", "facility_administrators", "assigned_customer_success_managers", "vendor", "administrator", "account_managers", "technical_support_engineer", "senior_editing_engineers", "editing_engineers", "accounting_department", "sandbox_creator", "customer_success_managers", "siteinsights_engineers", "capture_qa_managers", "everyone" ],
          "type" : "string"
        },
        "type" : "array"
      },
      "GroupMember" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "team_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "workspace_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "facility_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "review_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "group" : {
            "$ref" : "#/components/schemas/GroupMember_group"
          },
          "inherited_from" : {
            "$ref" : "#/components/schemas/InheritedFrom"
          }
        },
        "type" : "object"
      },
      "ImportCategoryRequest" : {
        "properties" : {
          "source_facility_key" : {
            "type" : "string"
          }
        },
        "required" : [ "source_facility_key" ],
        "type" : "object"
      },
      "ImportedBimVersionAttribute" : {
        "properties" : {
          "import_bim_version" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "InheritedFrom" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "InvokeCaptureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/InvokeRequest"
        } ]
      },
      "InvokeFacilityRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "InvokeRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "JobableAttribute" : {
        "properties" : {
          "error_code" : {
            "type" : "string"
          },
          "progress" : {
            "format" : "float",
            "type" : "number"
          },
          "processing_status" : {
            "type" : "string"
          },
          "running_state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LanguageCode" : {
        "enum" : [ "af", "ar", "zh", "da", "nl", "en", "fr", "fa", "de", "he", "hi", "id", "it", "jp", "ko", "ms", "pt", "ru", "es", "sv", "ta", "te", "th", "tr", "vi" ],
        "type" : "string"
      },
      "LastTaskUpdatedAtResponse" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LastTaskUpdatedAtResponse_result"
          }
        },
        "type" : "object"
      },
      "LastUpdatedUserAttribute" : {
        "properties" : {
          "last_updated_user" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "Level" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Level_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/PublishableAttribute"
        }, {
          "$ref" : "#/components/schemas/AvailableAttribute"
        } ]
      },
      "LicenseAttribute" : {
        "properties" : {
          "applied_license_state" : {
            "$ref" : "#/components/schemas/AppliedLicenseState"
          }
        },
        "type" : "object"
      },
      "LicenseTypeAttribute" : {
        "properties" : {
          "license_type" : {
            "enum" : [ "subscription", "project_license", "subscription_trial", "project_license_trial" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Locale" : {
        "description" : "Simple interface for ISO-639-1 language codes and ISO-3166-1-alpha-2 country codes",
        "enum" : [ "en-GB", "en-US", "en-AU", "en-CA", "ko-KR", "ja-JP" ],
        "type" : "string"
      },
      "LocaleAttribute" : {
        "properties" : {
          "locale" : {
            "$ref" : "#/components/schemas/Locale"
          }
        },
        "type" : "object"
      },
      "Location" : {
        "properties" : {
          "lat" : {
            "format" : "float",
            "type" : "number"
          },
          "lon" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "LocationAttribute" : {
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          }
        },
        "type" : "object"
      },
      "LocationRequest" : {
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          }
        },
        "type" : "object"
      },
      "LockState" : {
        "description" : "Lock 상태",
        "enum" : [ "active", "locked", "suspended" ],
        "type" : "string"
      },
      "LockStateAttribute" : {
        "properties" : {
          "lock_state" : {
            "$ref" : "#/components/schemas/LockState"
          },
          "lock_state_updated_at" : {
            "description" : "UTC+0 based.",
            "format" : "date-time",
            "type" : "string"
          },
          "lock_reason" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LogoUrls" : {
        "description" : "Logo URLs",
        "properties" : {
          "thumb" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LogoUrlsAttribute" : {
        "properties" : {
          "logo_urls" : {
            "$ref" : "#/components/schemas/LogoUrls"
          }
        },
        "type" : "object"
      },
      "MemberItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/MemberItem_attributes"
          }
        },
        "type" : "object"
      },
      "MemberList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/MemberItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "type" : "object"
      },
      "MetaRequest" : {
        "properties" : {
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "MetaResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MetaResponse_allOf"
        } ]
      },
      "MfaAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MfaAttribute_allOf"
        }, {
          "$ref" : "#/components/schemas/MfaMethodAttribute"
        } ]
      },
      "MfaMethodAttribute" : {
        "properties" : {
          "mfa_method" : {
            "enum" : [ "email" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Node" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Node_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "OptOutAttribute" : {
        "properties" : {
          "opt_out" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Pagination" : {
        "description" : "Pagination info.",
        "properties" : {
          "total_entries" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_pages" : {
            "format" : "int32",
            "type" : "integer"
          },
          "per_page" : {
            "format" : "int32",
            "type" : "integer"
          },
          "previous_page" : {
            "format" : "int32",
            "type" : "integer"
          },
          "current_page" : {
            "format" : "int32",
            "type" : "integer"
          },
          "next_page" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Pano" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Pano_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/ActionAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/PanoRevisionAttribute"
        }, {
          "$ref" : "#/components/schemas/ConstantableAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "PanoExif" : {
        "properties" : {
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif_exif"
          },
          "video" : {
            "$ref" : "#/components/schemas/PanoExif_video"
          }
        },
        "type" : "object"
      },
      "PanoMaterialAttribute" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoOrigin" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoRevisionAttribute" : {
        "properties" : {
          "revision_type" : {
            "$ref" : "#/components/schemas/PanoRevisionType"
          },
          "enhanced_image_revision" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "PanoRevisionType" : {
        "enum" : [ "normal", "enhanced_image" ],
        "type" : "string"
      },
      "PanoType" : {
        "enum" : [ "still", "red", "green", "voice" ],
        "type" : "string"
      },
      "Permission" : {
        "enum" : [ "R", "RU", "RC", "RUC", "F", "M", "D" ],
        "type" : "string"
      },
      "PermissionAttribute" : {
        "properties" : {
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          }
        },
        "type" : "object"
      },
      "PlangridAnnotationAttributes" : {
        "properties" : {
          "plangrid_project_id" : {
            "type" : "string"
          },
          "plangrid_item_id" : {
            "type" : "string"
          },
          "plangrid_attachment_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Pointcloud" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Pointcloud_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/ConstantableAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/PointcloudTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/PointcloudMeshTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/PointsCountAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "PointcloudCpcMeshState" : {
        "description" : "Pointcloud cpc mesh state",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "PointcloudMeshType" : {
        "enum" : [ "none", "all", "only_amazon", "only_cupix" ],
        "type" : "string"
      },
      "PointcloudMeshTypeAttribute" : {
        "properties" : {
          "mesh_type" : {
            "$ref" : "#/components/schemas/PointcloudMeshType"
          }
        },
        "type" : "object"
      },
      "PointcloudOctreeState" : {
        "description" : "Pointcloud octree state",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "PointcloudPotreeState" : {
        "description" : "Pointcloud potree state",
        "enum" : [ "created", "processing", "uploading", "missing", "uploaded", "error" ],
        "type" : "string"
      },
      "PointcloudType" : {
        "enum" : [ "uploaded", "3d_reconstructed", "all" ],
        "type" : "string"
      },
      "PointcloudTypeAttribute" : {
        "properties" : {
          "pointcloud_type" : {
            "$ref" : "#/components/schemas/PointcloudType"
          }
        },
        "type" : "object"
      },
      "PointsCountAttribute" : {
        "properties" : {
          "points_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "PrimaryCsmAttribute" : {
        "properties" : {
          "primary_csm" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "ProcessingOptionsResource" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProcoreAnnotationAttributes" : {
        "properties" : {
          "procore_company_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "procore_project_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "procore_item_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "procore_attachment_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "PublicAccessEnabledAtAttribute" : {
        "properties" : {
          "public_access_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PublishableAttribute" : {
        "properties" : {
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ReconstructionStateAttribute" : {
        "properties" : {
          "reconstruction_state" : {
            "enum" : [ "none", "processing", "done", "error" ],
            "type" : "string"
          },
          "reconstruction_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Record" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Record_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/SiteinsightsReportAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ],
        "discriminator" : {
          "propertyName" : "recordType"
        }
      },
      "RecordActionState" : {
        "description" : "Record action state",
        "enum" : [ "required", "completed" ],
        "type" : "string"
      },
      "ReferencePlanUploadMethodAttribute" : {
        "properties" : {
          "reference_plan_upload_method" : {
            "enum" : [ "all", "pdf", "advanced" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "RefinementAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/RefinementAttribute_allOf"
        } ]
      },
      "RefinementState" : {
        "enum" : [ "none", "draft", "ready", "queued", "refined", "skipped" ],
        "type" : "string"
      },
      "Resource" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Resource_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "ResourceItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Resource"
          }
        },
        "type" : "object"
      },
      "ResourceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ResourceItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ResourceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ResourceListResponse_allOf"
        } ]
      },
      "ResourceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ResourceResponse_allOf"
        } ]
      },
      "ResourceStateAttribute" : {
        "description" : "Resource State",
        "properties" : {
          "resource_state" : {
            "enum" : [ "created", "uploading", "missing", "uploaded" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Response" : {
        "properties" : {
          "result" : {
            "type" : "object"
          },
          "session" : {
            "$ref" : "#/components/schemas/Response_session"
          },
          "aggs" : {
            "nullable" : true,
            "type" : "object"
          }
        },
        "required" : [ "result", "session" ],
        "type" : "object"
      },
      "Review" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Review_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/LicenseAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/DraftedAtAttribute"
        }, {
          "$ref" : "#/components/schemas/PublicAccessEnabledAtAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "ReviewPublicAccessEnabledAtAttribute" : {
        "properties" : {
          "review_public_access_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SalesforceAttribute" : {
        "properties" : {
          "sf_resource_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ScheduleState" : {
        "description" : "Schedule State",
        "enum" : [ "none", "initialized", "tracking_plan_created", "task_creating", "task_created" ],
        "type" : "string"
      },
      "SecondaryCsmAttribute" : {
        "properties" : {
          "secondary_csm" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "SecurityAttribute" : {
        "properties" : {
          "review_publish_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SelectedAnnotationLayerItem" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedAnnotationLayers" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedAnnotationLayers_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedItemIds"
        } ]
      },
      "SelectedAreas" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedBimItem" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedBims" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedBims_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedItemIds"
        } ]
      },
      "SelectedDateRanges" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/DateRange"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedFloorplanItem" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level" : {
            "$ref" : "#/components/schemas/SelectedFloorplanItem_level"
          }
        },
        "type" : "object"
      },
      "SelectedFloorplans" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedFloorplans_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedItemIds"
        } ]
      },
      "SelectedIds" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "default_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedItemIds" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedLevelItems" : {
        "items" : {
          "$ref" : "#/components/schemas/SelectedLevelItems_inner"
        },
        "type" : "array"
      },
      "SelectedLevels" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedLevels_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedIds"
        } ]
      },
      "SelectedPointclouds" : {
        "properties" : {
          "pointclouds" : {
            "items" : {
              "$ref" : "#/components/schemas/Pointcloud"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Session" : {
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/SessionUserItem"
          },
          "team" : {
            "$ref" : "#/components/schemas/TeamItem"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "expires_at" : {
            "description" : "현재 세션이 자동으로 만료되는 시각이며, token refresh 시 연장된다",
            "format" : "date-time",
            "type" : "string"
          },
          "session_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SessionUser" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        }, {
          "$ref" : "#/components/schemas/SessionUser_allOf"
        }, {
          "$ref" : "#/components/schemas/GroupCodesAttributes"
        } ]
      },
      "SessionUserItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/SessionUser"
          }
        },
        "type" : "object"
      },
      "ShareListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ShareListResponse_allOf"
        } ]
      },
      "ShareRequest" : {
        "properties" : {
          "user_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "group_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "review_key" : {
            "type" : "string"
          },
          "emails" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "send_notification" : {
            "type" : "boolean"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SignInMethodAttribute" : {
        "properties" : {
          "sign_in_methods" : {
            "items" : {
              "$ref" : "#/components/schemas/SignInMethods"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SignInMethods" : {
        "enum" : [ "email", "azure", "procore" ],
        "type" : "string"
      },
      "SiteinsightsReportAttribute" : {
        "properties" : {
          "siteinsights_reports_url" : {
            "$ref" : "#/components/schemas/SiteinsightsReportUrls"
          },
          "siteinsights_report_state" : {
            "type" : "string"
          },
          "siteinsights_report_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SiteinsightsReportUrls" : {
        "description" : "Siteinsights Report URLs",
        "properties" : {
          "progress" : {
            "type" : "string"
          },
          "record_status" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Spacetime" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Spacetime_allOf"
        } ]
      },
      "SpacetimeItem" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Spacetime"
          }
        },
        "type" : "object"
      },
      "SpacetimeList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/SpacetimeItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "SpacetimeListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SpacetimeListResponse_allOf"
        } ]
      },
      "Storage" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "s3_source_bucket_url" : {
            "type" : "string"
          },
          "s3_source_bucket_name" : {
            "type" : "string"
          },
          "s3_hosting_bucket_name" : {
            "type" : "string"
          },
          "s3_bucket_region" : {
            "type" : "string"
          },
          "s3_region_code" : {
            "type" : "string"
          },
          "cf_distribution_id" : {
            "type" : "string"
          },
          "cf_hostname" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        }
      },
      "StorageAttribute" : {
        "properties" : {
          "storage" : {
            "$ref" : "#/components/schemas/Storage"
          }
        },
        "type" : "object"
      },
      "Team" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Team"
        }, {
          "$ref" : "#/components/schemas/LogoUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        }, {
          "$ref" : "#/components/schemas/SecurityAttribute"
        }, {
          "$ref" : "#/components/schemas/TeamBimPackAttribute"
        }, {
          "$ref" : "#/components/schemas/CertifiedAttribute"
        }, {
          "$ref" : "#/components/schemas/LockStateAttribute"
        }, {
          "$ref" : "#/components/schemas/LicenseTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/SignInMethodAttribute"
        }, {
          "$ref" : "#/components/schemas/CustomerSuccessManagersAttribute"
        }, {
          "$ref" : "#/components/schemas/TeamEntityUpdatesAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/PrimaryCsmAttribute"
        }, {
          "$ref" : "#/components/schemas/SecondaryCsmAttribute"
        }, {
          "$ref" : "#/components/schemas/ReviewPublicAccessEnabledAtAttribute"
        }, {
          "$ref" : "#/components/schemas/AccessibleEditorMenuAttribute"
        }, {
          "$ref" : "#/components/schemas/TimezoneOffsetAttribute"
        }, {
          "$ref" : "#/components/schemas/LocaleAttribute"
        }, {
          "$ref" : "#/components/schemas/ReferencePlanUploadMethodAttribute"
        }, {
          "$ref" : "#/components/schemas/TeamArchiveRetentionAttribute"
        }, {
          "$ref" : "#/components/schemas/CupixResourceNumberAttribute"
        } ]
      },
      "TeamArchiveRetentionAttribute" : {
        "properties" : {
          "archive_retention_months" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TeamBimPackAttribute" : {
        "properties" : {
          "available_bim_pack_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_bim_pack_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TeamEntityUpdates" : {
        "properties" : {
          "form_design" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "form_field" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          }
        },
        "type" : "object"
      },
      "TeamEntityUpdatesAttribute" : {
        "properties" : {
          "entity_updates" : {
            "$ref" : "#/components/schemas/TeamEntityUpdates"
          }
        },
        "type" : "object"
      },
      "TeamItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Team"
          }
        },
        "type" : "object"
      },
      "TeamState" : {
        "description" : "Team state",
        "enum" : [ "created", "initializing", "active", "expired" ],
        "type" : "string"
      },
      "ThumbnailUrls" : {
        "description" : "Thumbnail URLs",
        "properties" : {
          "thumb" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ThumbnailUrlsAttribute" : {
        "properties" : {
          "thumbnail_urls" : {
            "$ref" : "#/components/schemas/ThumbnailUrls"
          }
        },
        "type" : "object"
      },
      "Tile" : {
        "properties" : {
          "base" : {
            "type" : "string"
          },
          "items" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TimezoneOffsetAttribute" : {
        "properties" : {
          "timezone_offset" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TranscriptLanguageAttribute" : {
        "properties" : {
          "transcript_language" : {
            "$ref" : "#/components/schemas/LanguageCode"
          }
        },
        "type" : "object"
      },
      "TranscriptionAttribute" : {
        "properties" : {
          "transcript_state" : {
            "enum" : [ "none", "uploaded", "processing", "error", "done" ],
            "type" : "string"
          },
          "transcript_state_updated_at" : {
            "type" : "string"
          },
          "transcript_state_reason" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Transformation" : {
        "description" : "Transformation",
        "properties" : {
          "tm" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "version" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TrialState" : {
        "description" : "Trial state",
        "enum" : [ "none", "active", "expired" ],
        "type" : "string"
      },
      "TrialableAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrialableAttribute_allOf"
        } ]
      },
      "UUID" : {
        "description" : "UUID strings",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "ifc_guid" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Unit" : {
        "description" : "Unit",
        "properties" : {
          "length" : {
            "enum" : [ "mm", "cm", "m", "ft", "in", "ft' in\"", "ftin" ],
            "type" : "string"
          },
          "area" : {
            "enum" : [ "sqmm", "sqcm", "sqm", "sqft", "sqin" ],
            "type" : "string"
          },
          "volume" : {
            "enum" : [ "m3", "cy", "ft3" ],
            "type" : "string"
          },
          "count" : {
            "enum" : [ "ea" ],
            "type" : "string"
          },
          "weight" : {
            "enum" : [ "g", "kg", "lb", "t" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UnitAttribute" : {
        "properties" : {
          "unit" : {
            "$ref" : "#/components/schemas/Unit"
          }
        },
        "type" : "object"
      },
      "UpdateAnnotationAssociationRequest" : {
        "properties" : {
          "asset_keys" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "asset_keys" ],
        "type" : "object"
      },
      "UpdateAnnotationRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateAnnotationRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/Bim360AnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/AccAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/ProcoreAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/PlangridAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/AnnotatableRequest"
        } ]
      },
      "UpdateBillingAccountAttribute" : {
        "properties" : {
          "billing_account_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "UpdateCaptureEditingState" : {
        "description" : "Capture Editing state",
        "enum" : [ "ready", "holding", "escalated", "editing", "in_review", "done", "re_ready", "stopped" ],
        "type" : "string"
      },
      "UpdateCaptureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCaptureRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/CaptureVersionsRequest"
        }, {
          "$ref" : "#/components/schemas/CaptureTypeRequest"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/FloorplanRequest"
        }, {
          "$ref" : "#/components/schemas/WarningAttribute"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/CaptureVideoMeta"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/EditingDifficultyScoreAttribute"
        }, {
          "$ref" : "#/components/schemas/RefinementAttribute"
        } ]
      },
      "UpdateCommentRequest" : {
        "properties" : {
          "content" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateFacilityRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateFacilityRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateLogoRequest"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateStorageRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilitySizeUnitAttribute"
        } ]
      },
      "UpdateFieldRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateFieldRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "UpdateLogoRequest" : {
        "properties" : {
          "logo" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdatePositionRequest" : {
        "properties" : {
          "position" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "UpdateStorageRequest" : {
        "properties" : {
          "storage_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "UpdateTagsRequest" : {
        "properties" : {
          "tags" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateThumbnailRequest" : {
        "properties" : {
          "thumbnail" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateUUIDRequest" : {
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "ifc_guid" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateWorkspaceRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateWorkspaceRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateLogoRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateBillingAccountAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateStorageRequest"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        } ]
      },
      "UploadCredentialResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/UploadCredentialResponse_allOf"
        } ]
      },
      "UploadCredentials" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AwsCredentials"
        }, {
          "$ref" : "#/components/schemas/UploadCredentials_allOf"
        } ]
      },
      "UploadPlatform" : {
        "enum" : [ "web", "app", "cloud_connect" ],
        "type" : "string"
      },
      "UploadState" : {
        "enum" : [ "upload_ready", "upload_done", "pano_uploading", "invalid" ],
        "type" : "string"
      },
      "User" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.User"
        }, {
          "$ref" : "#/components/schemas/admin.User"
        }, {
          "$ref" : "#/components/schemas/User_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/CertifiedAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/TranscriptLanguageAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/MfaAttribute"
        }, {
          "$ref" : "#/components/schemas/EditorLevelAttribute"
        } ]
      },
      "UserMember" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "team_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "workspace_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "facility_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "review_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserMember_user"
          },
          "inherited_from" : {
            "$ref" : "#/components/schemas/InheritedFrom"
          }
        },
        "type" : "object"
      },
      "VideoMaterialAttribute" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VoxelState" : {
        "enum" : [ "aggregating", "error", "done" ],
        "type" : "string"
      },
      "Voxels" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "voxel_state" : {
            "type" : "string"
          },
          "voxel_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "voxels_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "VoxelsItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Voxels"
          }
        },
        "type" : "object"
      },
      "VoxelsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/VoxelsResponse_allOf"
        } ]
      },
      "WarningAttribute" : {
        "properties" : {
          "warnings" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "WorkareaGroup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/WorkareaGroup_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "WorkareaGroupItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/WorkareaGroup"
          }
        },
        "type" : "object"
      },
      "WorkareaGroupResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkareaGroupResponse_allOf"
        } ]
      },
      "Workspace" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Workspace_allOf"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        }, {
          "$ref" : "#/components/schemas/StorageAttribute"
        }, {
          "$ref" : "#/components/schemas/LockStateAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        } ]
      },
      "WorkspaceItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Workspace"
          }
        },
        "type" : "object"
      },
      "WorkspaceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/WorkspaceItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "WorkspaceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkspaceListResponse_allOf"
        } ]
      },
      "WorkspaceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkspaceResponse_allOf"
        } ]
      },
      "admin.ReportTo" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "admin.SalesInfo" : {
        "properties" : {
          "firstname_ko" : {
            "type" : "string"
          },
          "lastname_ko" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "title_ko" : {
            "type" : "string"
          },
          "phone_office" : {
            "type" : "string"
          },
          "phone_mobile" : {
            "type" : "string"
          },
          "organization" : {
            "type" : "string"
          },
          "territory" : {
            "$ref" : "#/components/schemas/base.Territory"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "admin.User" : {
        "discriminator" : {
          "propertyName" : "AdminUserType"
        },
        "properties" : {
          "sales_info" : {
            "$ref" : "#/components/schemas/admin.SalesInfo"
          },
          "report_to" : {
            "$ref" : "#/components/schemas/admin.ReportTo"
          }
        },
        "type" : "object"
      },
      "base.Capture" : {
        "discriminator" : {
          "propertyName" : "baseCaptureType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/CaptureEditingState"
          },
          "upload_state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "panos_count" : {
            "type" : "integer"
          },
          "progress" : {
            "format" : "float",
            "type" : "number"
          },
          "skat_type" : {
            "$ref" : "#/components/schemas/CaptureSkatType"
          },
          "skat_compute_duration" : {
            "format" : "int64",
            "type" : "integer"
          },
          "error_code" : {
            "type" : "string"
          },
          "reconstruction_error_code" : {
            "type" : "string"
          },
          "refinement_error_code" : {
            "type" : "string"
          },
          "processing_status" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "base.Field" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/base_Field_allOf"
        } ],
        "discriminator" : {
          "propertyName" : "baseField"
        }
      },
      "base.FieldItem" : {
        "discriminator" : {
          "propertyName" : "baseFieldItem"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "base.FieldList" : {
        "discriminator" : {
          "propertyName" : "baseFieldList"
        },
        "properties" : {
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "pagination" ],
        "type" : "object"
      },
      "base.Team" : {
        "discriminator" : {
          "propertyName" : "baseTeamType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/TeamState"
          },
          "domain" : {
            "type" : "string"
          },
          "use_self_signup" : {
            "type" : "boolean"
          },
          "use_editing_support" : {
            "type" : "boolean"
          },
          "email_domain" : {
            "type" : "string"
          },
          "nadir_angle" : {
            "format" : "float",
            "type" : "number"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "deleted_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "workspaces_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "mfa_enabled" : {
            "type" : "boolean"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "review_preview_capture_disabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "base.Territory" : {
        "discriminator" : {
          "propertyName" : "adminTerritoryType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "base.User" : {
        "discriminator" : {
          "propertyName" : "baseUserType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "email" : {
            "format" : "email",
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "locale" : {
            "$ref" : "#/components/schemas/Locale"
          },
          "api_token" : {
            "type" : "string"
          },
          "crn" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Annotation_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "state" : {
            "enum" : [ "open", "close" ],
            "type" : "string"
          },
          "review" : {
            "$ref" : "#/components/schemas/Review"
          },
          "form_design" : {
            "$ref" : "#/components/schemas/FormDesign"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "annotation_layer" : {
            "$ref" : "#/components/schemas/AnnotationLayer"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "attachments_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "annotatable" : {
            "$ref" : "#/components/schemas/Annotatable"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Annotation"
          },
          "meta" : {
            "type" : "object"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationLayer_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "allowed_annotation_kind" : {
            "$ref" : "#/components/schemas/AllowedAnnotationKind"
          },
          "meta" : {
            "type" : "object"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AnnotationList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AnnotationItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AnnotationResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Asset_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "asset_type" : {
            "$ref" : "#/components/schemas/AssetType"
          },
          "assetable" : {
            "$ref" : "#/components/schemas/Assetable"
          },
          "state" : {
            "$ref" : "#/components/schemas/AssetState"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "uuid" : {
            "format" : "uuid",
            "type" : "string"
          },
          "transcript_language" : {
            "type" : "string"
          },
          "child_assets" : {
            "items" : {
              "$ref" : "#/components/schemas/ChildAssetItem"
            },
            "type" : "array"
          },
          "badges" : {
            "items" : {
              "$ref" : "#/components/schemas/BadgeItem"
            },
            "type" : "array"
          },
          "annotations" : {
            "items" : {
              "$ref" : "#/components/schemas/AnnotationsItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AssetListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AssetList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Badge_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "position" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BillableAttribute_allOf" : {
        "properties" : {
          "plan" : {
            "type" : "string"
          },
          "unlimited_capture_credit" : {
            "type" : "boolean"
          },
          "applied_billing_state" : {
            "$ref" : "#/components/schemas/BillingState"
          },
          "billing_state" : {
            "$ref" : "#/components/schemas/BillingState"
          },
          "billing_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "billing_started_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "billing_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "billing_info" : {
            "$ref" : "#/components/schemas/BillingInfo"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Bim_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "resource_state" : {
            "type" : "string"
          },
          "forge_state" : {
            "type" : "string"
          },
          "room_state" : {
            "type" : "string"
          },
          "mesh_state" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "meta" : {
            "type" : "object"
          },
          "upload_url" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "encoded_forge_urn" : {
            "type" : "string"
          },
          "forge_urn" : {
            "type" : "string"
          },
          "forge_region" : {
            "type" : "string"
          },
          "forge_format_type" : {
            "type" : "string"
          },
          "forge_workflow_id" : {
            "type" : "string"
          },
          "grid_system_state" : {
            "$ref" : "#/components/schemas/BimGridSystemState"
          },
          "grid_system_download_url" : {
            "type" : "string"
          },
          "grid_system_upload_url" : {
            "type" : "string"
          },
          "grid_system_enabled" : {
            "type" : "boolean"
          },
          "last_bim_revision" : {
            "$ref" : "#/components/schemas/BimRevision"
          },
          "use_survey_point" : {
            "type" : "boolean"
          },
          "survey_point" : {
            "type" : "object"
          },
          "project_base_point" : {
            "type" : "object"
          },
          "original_survey_point" : {
            "type" : "object"
          },
          "original_project_base_point" : {
            "type" : "object"
          },
          "bim_objects_url" : {
            "type" : "string"
          },
          "fresh_state" : {
            "type" : "string"
          },
          "fresh_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "siteinsights_entities_created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "default_3d_model" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BimRevision_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "forge_state" : {
            "type" : "string"
          },
          "room_state" : {
            "type" : "string"
          },
          "mesh_state" : {
            "type" : "string"
          },
          "bim_comparison_state" : {
            "type" : "string"
          },
          "bim_revision_state" : {
            "type" : "string"
          },
          "bim_revision_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "error_code" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "forge_urn" : {
            "type" : "string"
          },
          "forge_region" : {
            "type" : "string"
          },
          "forge_format_type" : {
            "type" : "string"
          },
          "forge_workflow_id" : {
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "use_survey_point" : {
            "type" : "boolean"
          },
          "survey_point" : {
            "type" : "object"
          },
          "project_base_point" : {
            "type" : "object"
          },
          "original_survey_point" : {
            "type" : "object"
          },
          "original_project_base_point" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkResponse_allOf_items" : {
        "properties" : {
          "index" : {
            "type" : "integer"
          },
          "error_code" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkResponse_allOf" : {
        "properties" : {
          "result" : {
            "items" : {
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          },
          "message" : {
            "type" : "object"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkResponse_allOf_items"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkShareRequest_items_inner_allOf_model_id" : {
        "oneOf" : [ {
          "type" : "string"
        }, {
          "format" : "int64",
          "type" : "integer"
        } ]
      },
      "BulkShareRequest_items_inner_allOf" : {
        "properties" : {
          "model_id" : {
            "$ref" : "#/components/schemas/BulkShareRequest_items_inner_allOf_model_id"
          },
          "model_type" : {
            "type" : "string"
          }
        },
        "required" : [ "model_id", "model_type" ],
        "type" : "object"
      },
      "BulkShareRequest_items_inner" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkShareRequest_items_inner_allOf"
        }, {
          "$ref" : "#/components/schemas/ShareRequest"
        } ]
      },
      "Capture_allOf" : {
        "properties" : {
          "capture_mode" : {
            "type" : "string"
          },
          "manual_align_type" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "floorplan" : {
            "$ref" : "#/components/schemas/Floorplan"
          },
          "meta" : {
            "type" : "object"
          },
          "measure_ready_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "thumbnail_urls" : {
            "$ref" : "#/components/schemas/ThumbnailUrls"
          },
          "skat_version" : {
            "type" : "string"
          },
          "dnn_version" : {
            "type" : "string"
          },
          "agent_version" : {
            "type" : "string"
          },
          "maker_version" : {
            "type" : "string"
          },
          "densemapper_version" : {
            "type" : "string"
          },
          "invokable_state" : {
            "$ref" : "#/components/schemas/CaptureInvokableState"
          },
          "incomplete_reason" : {
            "type" : "string"
          },
          "voxel_state" : {
            "type" : "string"
          },
          "voxel_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "voxels_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "dollhouses_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "zip_state" : {
            "type" : "string"
          },
          "process_output_upload_url" : {
            "type" : "string"
          },
          "cqa_assignment" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CaptureList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CaptureItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CaptureResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureWithMaterials_allOf" : {
        "properties" : {
          "videos" : {
            "items" : {
              "$ref" : "#/components/schemas/VideoMaterialAttribute"
            },
            "type" : "array"
          },
          "panos" : {
            "items" : {
              "$ref" : "#/components/schemas/PanoMaterialAttribute"
            },
            "type" : "array"
          },
          "processing_options_resource" : {
            "$ref" : "#/components/schemas/ProcessingOptionsResource"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureWithMaterialsResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CaptureWithMaterialsItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureWithMaterialsResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CaptureWithMaterialsResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Cluster_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "bucket" : {
            "type" : "string"
          },
          "size" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "node" : {
            "$ref" : "#/components/schemas/Node"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Cluster"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "root_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cpc_generatable" : {
            "type" : "boolean"
          },
          "skat_result_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Comment_allOf" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "content" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CommentListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CommentList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CommentResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CommentItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CommentResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CommentResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ConstantableAttribute_constants" : {
        "properties" : {
          "georeference" : {
            "$ref" : "#/components/schemas/Georeference"
          }
        },
        "type" : "object"
      },
      "CreateAnnotationRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/AnnotationKind"
          },
          "link" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "annotation_layer_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "description" : {
            "type" : "string"
          },
          "form_design_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "annotation_layer_id", "kind", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateCaptureRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "capture_type" : {
            "deprecated" : true,
            "description" : "Use creation_platform, material, method, migrated_from instead of capture_type",
            "enum" : [ "web_uploaded_from_browser", "app_no_ar_video", "app_no_ar_singleshot", "app_no_ar_multishot", "migrated_from_einstein_v2", "migrated_from_tesla_v1" ],
            "type" : "string"
          },
          "creation_platform" : {
            "enum" : [ "web", "app", "eci", "spot", "cloud_connect" ],
            "type" : "string"
          },
          "material" : {
            "enum" : [ "pano", "video", "pointcloud", "video-pano" ],
            "type" : "string"
          },
          "method" : {
            "enum" : [ "singleshot", "multishot", "timelaps", "cupix_json", "reality_capture" ],
            "type" : "string"
          },
          "migrated_from" : {
            "enum" : [ "einstein-v2", "tesla-v1" ],
            "type" : "string"
          },
          "ar_data_version" : {
            "type" : "string"
          },
          "capture_mode" : {
            "enum" : [ "basic", "expert" ],
            "type" : "string"
          },
          "manual_align_type" : {
            "enum" : [ "auto", "cupix1", "cupix2" ],
            "type" : "string"
          },
          "skat_type" : {
            "$ref" : "#/components/schemas/CaptureSkatType"
          },
          "description" : {
            "type" : "string"
          },
          "upload_platform" : {
            "$ref" : "#/components/schemas/UploadPlatform"
          }
        },
        "required" : [ "level_id", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateCaptureWithMaterialsRequest_allOf_videos" : {
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateCaptureWithMaterialsRequest_allOf" : {
        "properties" : {
          "videos" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest_allOf_videos"
            },
            "type" : "array"
          },
          "pano" : {
            "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest_allOf_videos"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateFacilityRequest_allOf" : {
        "properties" : {
          "workspace_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          },
          "siteinsights_version" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "address", "location", "name", "workspace_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateWorkspaceRequest_allOf" : {
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/FacilityOnCreateWorkspace"
          }
        },
        "required" : [ "name" ],
        "type" : "object",
        "example" : null
      },
      "CyclableAttribute_cycle_state_updated_by" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "EntityParameter_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "data_type" : {
            "type" : "string"
          },
          "allowed_values" : {
            "type" : "string"
          },
          "is_modifiable" : {
            "type" : "boolean"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "entity_parameter_group" : {
            "$ref" : "#/components/schemas/EntityParameterGroup"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterGroup_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "entity_id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "entity_type" : {
            "type" : "string"
          },
          "family" : {
            "type" : "string"
          },
          "is_admin_group" : {
            "type" : "boolean"
          },
          "is_system_group" : {
            "type" : "boolean"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EntityParameterList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EntityParameterItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EntityParameterResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ErrorResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ErrorCode"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Event_allOf" : {
        "properties" : {
          "eventable" : {
            "$ref" : "#/components/schemas/Eventable"
          },
          "action" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "custom_action_meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "eventable_team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "linked_review" : {
            "$ref" : "#/components/schemas/Review"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EventResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EventItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EventResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EventResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Facility_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "last_captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "captured_size" : {
            "format" : "float",
            "type" : "number"
          },
          "has_upload_candidates" : {
            "description" : "list에서는 항상 null을 반환하며, Get Facility 호출 시 true/false 중 반환한다.",
            "type" : "boolean"
          },
          "timezone_offset" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bims_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "records_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "levels_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "reviews_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "reports_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "deviation_reports_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "siteinsights_version" : {
            "format" : "int64",
            "type" : "integer"
          },
          "ground_level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "bim_pack" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "activity_type" : {
            "type" : "string"
          },
          "closed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "metric_name" : {
            "type" : "string"
          },
          "metric_unit" : {
            "type" : "string"
          },
          "timezone_name" : {
            "type" : "string"
          },
          "schedule_state" : {
            "$ref" : "#/components/schemas/ScheduleState"
          },
          "elements_count_refreshed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "refresh_elements_count_requested_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FacilityListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FacilityList"
          },
          "aggs" : {
            "$ref" : "#/components/schemas/FacilityAggsList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FacilityOnCreateWorkspace_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FacilityResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/FacilityItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FacilityResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FacilityResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Field_allOf" : {
        "properties" : {
          "form_field" : {
            "$ref" : "#/components/schemas/FormField"
          },
          "annotation" : {
            "$ref" : "#/components/schemas/Annotation"
          },
          "value" : {
            "type" : "string"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "pano" : {
            "$ref" : "#/components/schemas/Pano"
          },
          "review" : {
            "$ref" : "#/components/schemas/Review"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldItem_allOf" : {
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Field"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldList_allOf" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FieldItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FieldList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/FieldItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FieldResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Floorplan_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "source_filename" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/FloorplanState"
          },
          "tile_state" : {
            "$ref" : "#/components/schemas/FloorplanTileState"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_source" : {
            "$ref" : "#/components/schemas/FloorplanSource"
          },
          "floorplan_type" : {
            "$ref" : "#/components/schemas/FloorplanType"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "levels" : {
            "$ref" : "#/components/schemas/SelectedLevelItems"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "revision" : {
            "format" : "int64",
            "type" : "integer"
          },
          "transformation" : {
            "$ref" : "#/components/schemas/Transformation"
          },
          "meta" : {
            "type" : "object"
          },
          "upload_url" : {
            "type" : "string"
          },
          "tile_download_urls" : {
            "$ref" : "#/components/schemas/FloorplanTile"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "file_extension" : {
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "resolution" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "real_distance_in_millimeters" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanSource_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "upload_url" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "file_extension" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "pages" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanTile_items_inner" : {
        "properties" : {
          "z" : {
            "format" : "int32",
            "type" : "integer"
          },
          "max_y" : {
            "format" : "int32",
            "type" : "integer"
          },
          "max_x" : {
            "format" : "int32",
            "type" : "integer"
          },
          "pixel_size" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FormDesign_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "icon" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormField_allOf" : {
        "properties" : {
          "form_design" : {
            "$ref" : "#/components/schemas/FormDesign"
          },
          "kind" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "GroupMember_group" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LastTaskUpdatedAtResponse_result" : {
        "properties" : {
          "last_task_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Level_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "default_floorplan" : {
            "$ref" : "#/components/schemas/Floorplan"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "elevation" : {
            "format" : "float",
            "type" : "number"
          },
          "ceiling_height" : {
            "format" : "float",
            "type" : "number"
          },
          "captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplans_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointclouds_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_ground_level" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MemberItem_attributes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UserMember"
        }, {
          "$ref" : "#/components/schemas/GroupMember"
        } ]
      },
      "MetaResponse_allOf" : {
        "properties" : {
          "result" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MfaAttribute_allOf" : {
        "properties" : {
          "mfa_updatable" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Node_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Pano_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "pano_type" : {
            "$ref" : "#/components/schemas/PanoType"
          },
          "version" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "tile_state" : {
            "type" : "string"
          },
          "mask_state" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "processing_status" : {
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/PanoOrigin"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "cluster" : {
            "$ref" : "#/components/schemas/Cluster"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "meta" : {
            "type" : "object"
          },
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif"
          },
          "exif_create_date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "tile_download_urls" : {
            "$ref" : "#/components/schemas/Tile"
          },
          "mask_upload_url" : {
            "type" : "string"
          },
          "mask_url" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "stitched" : {
            "type" : "boolean"
          },
          "geo_coordinate" : {
            "$ref" : "#/components/schemas/GeoCoordinate"
          },
          "brightness" : {
            "format" : "float",
            "type" : "number"
          },
          "timestamp" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_at_from_meta" : {
            "format" : "int64",
            "type" : "integer"
          },
          "gps" : {
            "$ref" : "#/components/schemas/Gps"
          },
          "tile_size" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PanoExif_exif" : {
        "properties" : {
          "CreateDate" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoExif_video" : {
        "properties" : {
          "creation_time" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Pointcloud_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "potree_state" : {
            "$ref" : "#/components/schemas/PointcloudPotreeState"
          },
          "potree_url" : {
            "type" : "string"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Pointcloud"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "levels" : {
            "$ref" : "#/components/schemas/SelectedLevelItems"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "cluster" : {
            "$ref" : "#/components/schemas/Cluster"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "resource_upload_url" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "processing_state" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/CaptureEditingState"
          },
          "octree_state" : {
            "$ref" : "#/components/schemas/PointcloudOctreeState"
          },
          "octree_download_url" : {
            "type" : "string"
          },
          "octree_upload_url" : {
            "type" : "string"
          },
          "is_cluster_pano_unpublished" : {
            "type" : "boolean"
          },
          "voxel_state" : {
            "type" : "string"
          },
          "voxel_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "voxels_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "entry_filename" : {
            "type" : "string"
          },
          "mesh_uploaded_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "ply_uploaded_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cpc_mesh_state" : {
            "$ref" : "#/components/schemas/PointcloudCpcMeshState"
          },
          "cpc_mesh_upload_url" : {
            "type" : "string"
          },
          "cpc_mesh_download_url" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Record_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "[Deprecated attribute] duplicates from note\n",
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "running_state" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "meta" : {
            "type" : "object"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "captures_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "action_state" : {
            "$ref" : "#/components/schemas/RecordActionState"
          },
          "action_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "geo_coordinate_url" : {
            "type" : "string"
          },
          "panos_count" : {
            "type" : "integer"
          },
          "pointclouds_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "siteinsights_published_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RefinementAttribute_allOf" : {
        "properties" : {
          "refinement_state" : {
            "$ref" : "#/components/schemas/RefinementState"
          },
          "selected_unrefined_cluster_id" : {
            "format" : "int64",
            "type" : "number"
          },
          "refinement_floorplan_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Resource_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "size" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResourceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ResourceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResourceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ResourceItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResourceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ResourceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Response_session" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/Session"
        } ],
        "default" : null,
        "nullable" : true
      },
      "Review_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "fresh_state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "levels" : {
            "$ref" : "#/components/schemas/SelectedLevels"
          },
          "areas" : {
            "$ref" : "#/components/schemas/SelectedAreas"
          },
          "date_ranges" : {
            "$ref" : "#/components/schemas/SelectedDateRanges"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "last_captured_record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "entrypoint" : {
            "$ref" : "#/components/schemas/Entrypoint"
          },
          "annotation_layers" : {
            "$ref" : "#/components/schemas/SelectedAnnotationLayers"
          },
          "bims" : {
            "$ref" : "#/components/schemas/SelectedBims"
          },
          "floorplans" : {
            "$ref" : "#/components/schemas/SelectedFloorplans"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedAnnotationLayers_allOf" : {
        "properties" : {
          "annotation_layers" : {
            "items" : {
              "$ref" : "#/components/schemas/SelectedAnnotationLayerItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedBims_allOf" : {
        "properties" : {
          "bims" : {
            "items" : {
              "$ref" : "#/components/schemas/SelectedBimItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedFloorplanItem_level" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_ground_level" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "SelectedFloorplans_allOf" : {
        "properties" : {
          "floorplans" : {
            "items" : {
              "$ref" : "#/components/schemas/SelectedFloorplanItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedLevelItems_inner" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedLevels_allOf" : {
        "properties" : {
          "levels" : {
            "items" : {
              "$ref" : "#/components/schemas/Level"
            },
            "type" : "array"
          },
          "default_level" : {
            "$ref" : "#/components/schemas/Level"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SessionUser_allOf" : {
        "properties" : {
          "user_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ShareListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MemberList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Spacetime_allOf" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "pointclouds" : {
            "$ref" : "#/components/schemas/SelectedPointclouds"
          },
          "unprocessing_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "processing_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "published_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "processing_dollhouses_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "published_dollhouses_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "processing_reality_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "published_reality_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "unfinalized_entities_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "finalizing_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "finalized_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "finalized_cpcs_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "finalized_reality_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "preparing_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "queued_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "editing_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "error_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "done_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "measure_ready_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "pointclouds_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "published_pointclouds_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "meshes_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SpacetimeListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SpacetimeList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TrialableAttribute_allOf" : {
        "properties" : {
          "applied_trial_state" : {
            "$ref" : "#/components/schemas/TrialState"
          },
          "trial_state" : {
            "$ref" : "#/components/schemas/TrialState"
          },
          "trial_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "trial_started_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "trial_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateAnnotationRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "annotation_layer_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "state" : {
            "enum" : [ "open", "close" ],
            "type" : "string"
          },
          "transcript_state" : {
            "enum" : [ "none", "uploaded", "processing", "error", "done" ],
            "type" : "string"
          },
          "transcript_state_reason" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateCaptureRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Capture name",
            "type" : "string"
          },
          "upload_state" : {
            "$ref" : "#/components/schemas/UploadState"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/UpdateCaptureEditingState"
          },
          "thumbnail" : {
            "description" : "Capture thumbnail",
            "format" : "binary",
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "singleshot_state" : {
            "description" : "Capture singleshot state",
            "enum" : [ "running", "stopped" ],
            "type" : "string"
          },
          "skat_type" : {
            "$ref" : "#/components/schemas/CaptureSkatType"
          },
          "skat_compute_duration" : {
            "format" : "int64",
            "type" : "integer"
          },
          "preview_align_available" : {
            "type" : "boolean"
          },
          "error_code" : {
            "type" : "string"
          },
          "reconstruction_error_code" : {
            "type" : "string"
          },
          "refinement_error_code" : {
            "type" : "string"
          },
          "voxel_state" : {
            "$ref" : "#/components/schemas/VoxelState"
          },
          "processing_results" : {
            "type" : "object"
          },
          "description" : {
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cqa_assignment" : {
            "type" : "object"
          },
          "upload_platform" : {
            "$ref" : "#/components/schemas/UploadPlatform"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateFacilityRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Facility name",
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "workspace_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "description" : {
            "type" : "string"
          },
          "bim_id" : {
            "description" : "Master Bim ID",
            "format" : "int64",
            "type" : "integer"
          },
          "siteinsights_version" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_size" : {
            "format" : "float",
            "type" : "number"
          },
          "activity_type" : {
            "$ref" : "#/components/schemas/ActivityType"
          },
          "metric_name" : {
            "type" : "string"
          },
          "metric_unit" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateFieldRequest_allOf" : {
        "properties" : {
          "value" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateWorkspaceRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UploadCredentialResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/UploadCredentials"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UploadCredentials_allOf" : {
        "properties" : {
          "basepath" : {
            "type" : "string"
          },
          "endpoint" : {
            "type" : "string"
          },
          "bucket_name" : {
            "type" : "string"
          },
          "bucket_region" : {
            "type" : "string"
          },
          "acl" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "User_allOf" : {
        "properties" : {
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "current_workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "avatar_urls" : {
            "$ref" : "#/components/schemas/AvatarUrls"
          },
          "last_sign_in_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "use_email_notification" : {
            "type" : "boolean"
          },
          "use_push_notification" : {
            "type" : "boolean"
          },
          "password_updatable" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UserMember_user" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "email" : {
            "format" : "email",
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "avatar_urls" : {
            "$ref" : "#/components/schemas/AvatarUrls"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VoxelsResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/VoxelsItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "VoxelsResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/VoxelsResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaGroup_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "is_default" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaGroupResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WorkareaGroupItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaGroupResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkareaGroupResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Workspace_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "meta" : {
            "type" : "object"
          },
          "address" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "logo_urls" : {
            "$ref" : "#/components/schemas/LogoUrls"
          },
          "facilities_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "archived_facilities_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "required" : [ "id" ],
        "type" : "object",
        "example" : null
      },
      "WorkspaceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkspaceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkspaceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WorkspaceItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkspaceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkspaceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "base_Field_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      }
    },
    "securitySchemes" : { }
  }
}